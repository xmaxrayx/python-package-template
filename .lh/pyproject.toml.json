{
    "sourceFile": "pyproject.toml",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1757420727581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1757420853999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,11 @@\n \r\n [project]\r\n name =  \"py-project-toml\"\r\n authors = [\r\n-    {name = \"Max\", email = \"dciborow@microsoft.com\"},\r\n+    {name = \"Max\", email = \"https://github.com/xmaxrayx\"},\r\n ]\r\n-description = \"Sample Python Project for creating a new Python Module\"\r\n+description = \"xxx Add project descreption\"\r\n readme = \"README.md\"\r\n classifiers = [\r\n     \"Development Status :: 3 - Alpha\",\r\n     \"Intended Audience :: Developers\",\r\n"
                },
                {
                    "date": 1757420880480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,32 +21,10 @@\n ]\r\n requires-python = \">=3.8.1\"\r\n dynamic = [\"version\"]\r\n \r\n-[project.optional-dependencies]\r\n-spark = [\r\n-    \"pyspark>=3.0.0\"\r\n-]\r\n-test = [\r\n-    \"bandit[toml]==1.7.5\",\r\n-    \"black==23.3.0\",\r\n-    \"check-manifest==0.49\",\r\n-    \"flake8-bugbear==23.5.9\",\r\n-    \"flake8-docstrings\",\r\n-    \"flake8-formatter_junit_xml\",\r\n-    \"flake8\",\r\n-    \"flake8-pyproject\",\r\n-    \"pre-commit==3.3.1\",\r\n-    \"pylint==2.17.4\",\r\n-    \"pylint_junit\",\r\n-    \"pytest-cov==4.0.0\",\r\n-    \"pytest-mock<3.10.1\",\r\n-    \"pytest-runner\",\r\n-    \"pytest==7.3.1\",\r\n-    \"pytest-github-actions-annotate-failures\",\r\n-    \"shellcheck-py==0.9.0.2\"\r\n-]\r\n \r\n+\r\n [project.urls]\r\n Documentation = \"https://github.com/microsoft/python-package-template/tree/main#readme\"\r\n Source = \"https://github.com/microsoft/python-package-template\"\r\n Tracker = \"https://github.com/microsoft/python-package-template/issues\"\r\n"
                },
                {
                    "date": 1757420892653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,11 @@\n \r\n \r\n \r\n [project.urls]\r\n-Documentation = \"https://github.com/microsoft/python-package-template/tree/main#readme\"\r\n-Source = \"https://github.com/microsoft/python-package-template\"\r\n-Tracker = \"https://github.com/microsoft/python-package-template/issues\"\r\n+Documentation = \"https://github.com/microsoft/python-package-template/tree/main#readme  xxx\"\r\n+Source = \"https://github.com/microsoft/python-package-template  xxx\"\r\n+Tracker = \"https://github.com/microsoft/python-package-template/issues   xxx\"\r\n \r\n [tool.flit.module]\r\n name = \"python_package\"\r\n \r\n"
                },
                {
                    "date": 1757421109996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,292 +2,39 @@\n requires = [\"flit_core >=2,<4\"]\r\n build-backend = \"flit_core.buildapi\"\r\n \r\n [project]\r\n-name =  \"py-project-toml\"\r\n-authors = [\r\n-    {name = \"Max\", email = \"https://github.com/xmaxrayx\"},\r\n-]\r\n-description = \"xxx Add project descreption\"\r\n+name = \"pyniplay\"\r\n+description = \"Python wrapper for my console app\"\r\n readme = \"README.md\"\r\n+authors = [{ name = \"Max\", email = \"https://github.com/xmaxrayx\" }]\r\n+requires-python = \">=3.8\"\r\n+license = { text = \"MIT\" }\r\n classifiers = [\r\n     \"Development Status :: 3 - Alpha\",\r\n     \"Intended Audience :: Developers\",\r\n     \"License :: OSI Approved :: MIT License\",\r\n-    \"Programming Language :: Python :: 3 :: Only\",\r\n     \"Programming Language :: Python :: 3.8\",\r\n     \"Programming Language :: Python :: 3.9\",\r\n     \"Programming Language :: Python :: 3.10\",\r\n     \"Programming Language :: Python :: 3.11\"\r\n ]\r\n-requires-python = \">=3.8.1\"\r\n-dynamic = [\"version\"]\r\n+dependencies = []\r\n \r\n+[project.urls]\r\n+Homepage = \"https://github.com/xmaxrayx/pyniplay\"\r\n \r\n+[project.scripts]\r\n+pyniplay = \"pyniplay.cli:main\"\r\n \r\n-[project.urls]\r\n-Documentation = \"https://github.com/microsoft/python-package-template/tree/main#readme  xxx\"\r\n-Source = \"https://github.com/microsoft/python-package-template  xxx\"\r\n-Tracker = \"https://github.com/microsoft/python-package-template/issues   xxx\"\r\n-\r\n [tool.flit.module]\r\n-name = \"python_package\"\r\n+name = \"pyniplay\"\r\n \r\n-[tool.bandit]\r\n-exclude_dirs = [\"build\",\"dist\",\"tests\",\"scripts\"]\r\n-number = 4\r\n-recursive = true\r\n-targets = \"src\"\r\n-\r\n [tool.black]\r\n line-length = 120\r\n-fast = true\r\n \r\n-[tool.coverage.run]\r\n-branch = true\r\n-\r\n-[tool.coverage.report]\r\n-fail_under = 100\r\n-\r\n [tool.flake8]\r\n max-line-length = 120\r\n-select = \"F,E,W,B,B901,B902,B903\"\r\n-exclude = [\r\n-    \".eggs\",\r\n-    \".git\",\r\n-    \".tox\",\r\n-    \"nssm\",\r\n-    \"obj\",\r\n-    \"out\",\r\n-    \"packages\",\r\n-    \"pywin32\",\r\n-    \"tests\",\r\n-    \"swagger_client\"\r\n-]\r\n-ignore = [\r\n-    \"E722\",\r\n-    \"B001\",\r\n-    \"W503\",\r\n-    \"E203\"\r\n-]\r\n+ignore = [\"E203\", \"W503\"]\r\n \r\n-[tool.pyright]\r\n-include = [\"src\"]\r\n-exclude = [\r\n-    \"**/node_modules\",\r\n-    \"**/__pycache__\",\r\n-]\r\n-venv = \"env37\"\r\n-\r\n-reportMissingImports = true\r\n-reportMissingTypeStubs = false\r\n-\r\n-pythonVersion = \"3.7\"\r\n-pythonPlatform = \"Linux\"\r\n-\r\n-executionEnvironments = [\r\n-  { root = \"src\" }\r\n-]\r\n-\r\n [tool.pytest.ini_options]\r\n-addopts = \"--cov-report xml:coverage.xml --cov src --cov-fail-under 0 --cov-append -m 'not integration'\"\r\n-pythonpath = [\r\n-  \"src\"\r\n-]\r\n-testpaths = \"tests\"\r\n-junit_family = \"xunit2\"\r\n-markers = [\r\n-    \"integration: marks as integration test\",\r\n-    \"notebooks: marks as notebook test\",\r\n-    \"gpu: marks as gpu test\",\r\n-    \"spark: marks tests which need Spark\",\r\n-    \"slow: marks tests as slow\",\r\n-    \"unit: fast offline tests\",\r\n-]\r\n-\r\n-[tool.tox]\r\n-legacy_tox_ini = \"\"\"\r\n-[tox]\r\n-envlist = py, integration, spark, all\r\n-\r\n-[testenv]\r\n-commands =\r\n-    pytest -m \"not integration and not spark\" {posargs}\r\n-\r\n-[testenv:integration]\r\n-commands =\r\n-    pytest -m \"integration\" {posargs}\r\n-\r\n-[testenv:spark]\r\n-extras = spark\r\n-setenv =\r\n-       PYSPARK_DRIVER_PYTHON = {envpython}\r\n-       PYSPARK_PYTHON = {envpython}\r\n-commands =\r\n-    pytest -m \"spark\" {posargs}\r\n-\r\n-[testenv:all]\r\n-extras = all\r\n-setenv =\r\n-       PYSPARK_DRIVER_PYTHON = {envpython}\r\n-       PYSPARK_PYTHON = {envpython}\r\n-commands =\r\n-    pytest {posargs}\r\n-\"\"\"\r\n-\r\n-[tool.pylint]\r\n-extension-pkg-whitelist= [\r\n-    \"numpy\",\r\n-    \"torch\",\r\n-    \"cv2\",\r\n-    \"pyodbc\",\r\n-    \"pydantic\",\r\n-    \"ciso8601\",\r\n-    \"netcdf4\",\r\n-    \"scipy\"\r\n-]\r\n-ignore=\"CVS\"\r\n-ignore-patterns=\"test.*?py,conftest.py\"\r\n-init-hook='import sys; sys.setrecursionlimit(8 * sys.getrecursionlimit())'\r\n-jobs=0\r\n-limit-inference-results=100\r\n-persistent=\"yes\"\r\n-suggestion-mode=\"yes\"\r\n-unsafe-load-any-extension=\"no\"\r\n-\r\n-[tool.pylint.'MESSAGES CONTROL']\r\n-enable=\"c-extension-no-member\"\r\n-\r\n-[tool.pylint.'REPORTS']\r\n-evaluation=\"10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\"\r\n-output-format=\"text\"\r\n-reports=\"no\"\r\n-score=\"yes\"\r\n-\r\n-[tool.pylint.'REFACTORING']\r\n-max-nested-blocks=5\r\n-never-returning-functions=\"sys.exit\"\r\n-\r\n-[tool.pylint.'BASIC']\r\n-argument-naming-style=\"snake_case\"\r\n-attr-naming-style=\"snake_case\"\r\n-bad-names= [\r\n-    \"foo\",\r\n-    \"bar\"\r\n-]\r\n-class-attribute-naming-style=\"any\"\r\n-class-naming-style=\"PascalCase\"\r\n-const-naming-style=\"UPPER_CASE\"\r\n-docstring-min-length=-1\r\n-function-naming-style=\"snake_case\"\r\n-good-names= [\r\n-    \"i\",\r\n-    \"j\",\r\n-    \"k\",\r\n-    \"ex\",\r\n-    \"Run\",\r\n-    \"_\"\r\n-]\r\n-include-naming-hint=\"yes\"\r\n-inlinevar-naming-style=\"any\"\r\n-method-naming-style=\"snake_case\"\r\n-module-naming-style=\"any\"\r\n-no-docstring-rgx=\"^_\"\r\n-property-classes=\"abc.abstractproperty\"\r\n-variable-naming-style=\"snake_case\"\r\n-\r\n-[tool.pylint.'FORMAT']\r\n-ignore-long-lines=\"^\\\\s*(# )?.*['\\\"]?<?https?://\\\\S+>?\"\r\n-indent-after-paren=4\r\n-indent-string='    '\r\n-max-line-length=120\r\n-max-module-lines=1000\r\n-single-line-class-stmt=\"no\"\r\n-single-line-if-stmt=\"no\"\r\n-\r\n-[tool.pylint.'LOGGING']\r\n-logging-format-style=\"old\"\r\n-logging-modules=\"logging\"\r\n-\r\n-[tool.pylint.'MISCELLANEOUS']\r\n-notes= [\r\n-    \"FIXME\",\r\n-    \"XXX\",\r\n-    \"TODO\"\r\n-]\r\n-\r\n-[tool.pylint.'SIMILARITIES']\r\n-ignore-comments=\"yes\"\r\n-ignore-docstrings=\"yes\"\r\n-ignore-imports=\"yes\"\r\n-min-similarity-lines=7\r\n-\r\n-[tool.pylint.'SPELLING']\r\n-max-spelling-suggestions=4\r\n-spelling-store-unknown-words=\"no\"\r\n-\r\n-[tool.pylint.'STRING']\r\n-check-str-concat-over-line-jumps=\"no\"\r\n-\r\n-[tool.pylint.'TYPECHECK']\r\n-contextmanager-decorators=\"contextlib.contextmanager\"\r\n-generated-members=\"numpy.*,np.*,pyspark.sql.functions,collect_list\"\r\n-ignore-mixin-members=\"yes\"\r\n-ignore-none=\"yes\"\r\n-ignore-on-opaque-inference=\"yes\"\r\n-ignored-classes=\"optparse.Values,thread._local,_thread._local,numpy,torch,swagger_client\"\r\n-ignored-modules=\"numpy,torch,swagger_client,netCDF4,scipy\"\r\n-missing-member-hint=\"yes\"\r\n-missing-member-hint-distance=1\r\n-missing-member-max-choices=1\r\n-\r\n-[tool.pylint.'VARIABLES']\r\n-additional-builtins=\"dbutils\"\r\n-allow-global-unused-variables=\"yes\"\r\n-callbacks= [\r\n-    \"cb_\",\r\n-    \"_cb\"\r\n-]\r\n-dummy-variables-rgx=\"_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\"\r\n-ignored-argument-names=\"_.*|^ignored_|^unused_\"\r\n-init-import=\"no\"\r\n-redefining-builtins-modules=\"six.moves,past.builtins,future.builtins,builtins,io\"\r\n-\r\n-[tool.pylint.'CLASSES']\r\n-defining-attr-methods= [\r\n-    \"__init__\",\r\n-    \"__new__\",\r\n-    \"setUp\",\r\n-    \"__post_init__\"\r\n-]\r\n-exclude-protected= [\r\n-    \"_asdict\",\r\n-    \"_fields\",\r\n-    \"_replace\",\r\n-    \"_source\",\r\n-    \"_make\"\r\n-]\r\n-valid-classmethod-first-arg=\"cls\"\r\n-valid-metaclass-classmethod-first-arg=\"cls\"\r\n-\r\n-[tool.pylint.'DESIGN']\r\n-max-args=5\r\n-max-attributes=7\r\n-max-bool-expr=5\r\n-max-branches=12\r\n-max-locals=15\r\n-max-parents=7\r\n-max-public-methods=20\r\n-max-returns=6\r\n-max-statements=50\r\n-min-public-methods=2\r\n-\r\n-[tool.pylint.'IMPORTS']\r\n-allow-wildcard-with-all=\"no\"\r\n-analyse-fallback-blocks=\"no\"\r\n-deprecated-modules=\"optparse,tkinter.tix\"\r\n-\r\n-[tool.pylint.'EXCEPTIONS']\r\n-overgeneral-exceptions= [\r\n-    \"BaseException\",\r\n-    \"Exception\"\r\n-]\r\n+testpaths = [\"tests\"]\n\\ No newline at end of file\n"
                },
                {
                    "date": 1757434064648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,14 @@\n requires = [\"flit_core >=2,<4\"]\r\n build-backend = \"flit_core.buildapi\"\r\n \r\n [project]\r\n-name = \"pyniplay\"\r\n-description = \"Python wrapper for my console app\"\r\n+name =  \"py-project-toml\"\r\n+authors = [\r\n+    {name = \"Daniel Ciborowski\", email = \"dciborow@microsoft.com\"},\r\n+]\r\n+description = \"Sample Python Project for creating a new Python Module\"\r\n readme = \"README.md\"\r\n-authors = [{ name = \"Max\", email = \"https://github.com/xmaxrayx\" }]\r\n-requires-python = \">=3.8\"\r\n-license = { text = \"MIT\" }\r\n classifiers = [\r\n     \"Development Status :: 3 - Alpha\",\r\n     \"Intended Audience :: Developers\",\r\n     \"License :: OSI Approved :: MIT License\",\r\n"
                },
                {
                    "date": 1757434073084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,41 @@\n classifiers = [\r\n     \"Development Status :: 3 - Alpha\",\r\n     \"Intended Audience :: Developers\",\r\n     \"License :: OSI Approved :: MIT License\",\r\n+    \"Programming Language :: Python :: 3 :: Only\",\r\n     \"Programming Language :: Python :: 3.8\",\r\n     \"Programming Language :: Python :: 3.9\",\r\n     \"Programming Language :: Python :: 3.10\",\r\n     \"Programming Language :: Python :: 3.11\"\r\n ]\r\n-dependencies = []\r\n+requires-python = \">=3.8.1\"\r\n+dynamic = [\"version\"]\r\n \r\n+[project.optional-dependencies]\r\n+spark = [\r\n+    \"pyspark>=3.0.0\"\r\n+]\r\n+test = [\r\n+    \"bandit[toml]==1.7.5\",\r\n+    \"black==23.3.0\",\r\n+    \"check-manifest==0.49\",\r\n+    \"flake8-bugbear==23.5.9\",\r\n+    \"flake8-docstrings\",\r\n+    \"flake8-formatter_junit_xml\",\r\n+    \"flake8\",\r\n+    \"flake8-pyproject\",\r\n+    \"pre-commit==3.3.1\",\r\n+    \"pylint==2.17.4\",\r\n+    \"pylint_junit\",\r\n+    \"pytest-cov==4.0.0\",\r\n+    \"pytest-mock<3.10.1\",\r\n+    \"pytest-runner\",\r\n+    \"pytest==7.3.1\",\r\n+    \"pytest-github-actions-annotate-failures\",\r\n+    \"shellcheck-py==0.9.0.2\"\r\n+]\r\n+\r\n [project.urls]\r\n Homepage = \"https://github.com/xmaxrayx/pyniplay\"\r\n \r\n [project.scripts]\r\n"
                }
            ],
            "date": 1757420727581,
            "name": "Commit-0",
            "content": "[build-system]\r\nrequires = [\"flit_core >=2,<4\"]\r\nbuild-backend = \"flit_core.buildapi\"\r\n\r\n[project]\r\nname =  \"py-project-toml\"\r\nauthors = [\r\n    {name = \"Max\", email = \"dciborow@microsoft.com\"},\r\n]\r\ndescription = \"Sample Python Project for creating a new Python Module\"\r\nreadme = \"README.md\"\r\nclassifiers = [\r\n    \"Development Status :: 3 - Alpha\",\r\n    \"Intended Audience :: Developers\",\r\n    \"License :: OSI Approved :: MIT License\",\r\n    \"Programming Language :: Python :: 3 :: Only\",\r\n    \"Programming Language :: Python :: 3.8\",\r\n    \"Programming Language :: Python :: 3.9\",\r\n    \"Programming Language :: Python :: 3.10\",\r\n    \"Programming Language :: Python :: 3.11\"\r\n]\r\nrequires-python = \">=3.8.1\"\r\ndynamic = [\"version\"]\r\n\r\n[project.optional-dependencies]\r\nspark = [\r\n    \"pyspark>=3.0.0\"\r\n]\r\ntest = [\r\n    \"bandit[toml]==1.7.5\",\r\n    \"black==23.3.0\",\r\n    \"check-manifest==0.49\",\r\n    \"flake8-bugbear==23.5.9\",\r\n    \"flake8-docstrings\",\r\n    \"flake8-formatter_junit_xml\",\r\n    \"flake8\",\r\n    \"flake8-pyproject\",\r\n    \"pre-commit==3.3.1\",\r\n    \"pylint==2.17.4\",\r\n    \"pylint_junit\",\r\n    \"pytest-cov==4.0.0\",\r\n    \"pytest-mock<3.10.1\",\r\n    \"pytest-runner\",\r\n    \"pytest==7.3.1\",\r\n    \"pytest-github-actions-annotate-failures\",\r\n    \"shellcheck-py==0.9.0.2\"\r\n]\r\n\r\n[project.urls]\r\nDocumentation = \"https://github.com/microsoft/python-package-template/tree/main#readme\"\r\nSource = \"https://github.com/microsoft/python-package-template\"\r\nTracker = \"https://github.com/microsoft/python-package-template/issues\"\r\n\r\n[tool.flit.module]\r\nname = \"python_package\"\r\n\r\n[tool.bandit]\r\nexclude_dirs = [\"build\",\"dist\",\"tests\",\"scripts\"]\r\nnumber = 4\r\nrecursive = true\r\ntargets = \"src\"\r\n\r\n[tool.black]\r\nline-length = 120\r\nfast = true\r\n\r\n[tool.coverage.run]\r\nbranch = true\r\n\r\n[tool.coverage.report]\r\nfail_under = 100\r\n\r\n[tool.flake8]\r\nmax-line-length = 120\r\nselect = \"F,E,W,B,B901,B902,B903\"\r\nexclude = [\r\n    \".eggs\",\r\n    \".git\",\r\n    \".tox\",\r\n    \"nssm\",\r\n    \"obj\",\r\n    \"out\",\r\n    \"packages\",\r\n    \"pywin32\",\r\n    \"tests\",\r\n    \"swagger_client\"\r\n]\r\nignore = [\r\n    \"E722\",\r\n    \"B001\",\r\n    \"W503\",\r\n    \"E203\"\r\n]\r\n\r\n[tool.pyright]\r\ninclude = [\"src\"]\r\nexclude = [\r\n    \"**/node_modules\",\r\n    \"**/__pycache__\",\r\n]\r\nvenv = \"env37\"\r\n\r\nreportMissingImports = true\r\nreportMissingTypeStubs = false\r\n\r\npythonVersion = \"3.7\"\r\npythonPlatform = \"Linux\"\r\n\r\nexecutionEnvironments = [\r\n  { root = \"src\" }\r\n]\r\n\r\n[tool.pytest.ini_options]\r\naddopts = \"--cov-report xml:coverage.xml --cov src --cov-fail-under 0 --cov-append -m 'not integration'\"\r\npythonpath = [\r\n  \"src\"\r\n]\r\ntestpaths = \"tests\"\r\njunit_family = \"xunit2\"\r\nmarkers = [\r\n    \"integration: marks as integration test\",\r\n    \"notebooks: marks as notebook test\",\r\n    \"gpu: marks as gpu test\",\r\n    \"spark: marks tests which need Spark\",\r\n    \"slow: marks tests as slow\",\r\n    \"unit: fast offline tests\",\r\n]\r\n\r\n[tool.tox]\r\nlegacy_tox_ini = \"\"\"\r\n[tox]\r\nenvlist = py, integration, spark, all\r\n\r\n[testenv]\r\ncommands =\r\n    pytest -m \"not integration and not spark\" {posargs}\r\n\r\n[testenv:integration]\r\ncommands =\r\n    pytest -m \"integration\" {posargs}\r\n\r\n[testenv:spark]\r\nextras = spark\r\nsetenv =\r\n       PYSPARK_DRIVER_PYTHON = {envpython}\r\n       PYSPARK_PYTHON = {envpython}\r\ncommands =\r\n    pytest -m \"spark\" {posargs}\r\n\r\n[testenv:all]\r\nextras = all\r\nsetenv =\r\n       PYSPARK_DRIVER_PYTHON = {envpython}\r\n       PYSPARK_PYTHON = {envpython}\r\ncommands =\r\n    pytest {posargs}\r\n\"\"\"\r\n\r\n[tool.pylint]\r\nextension-pkg-whitelist= [\r\n    \"numpy\",\r\n    \"torch\",\r\n    \"cv2\",\r\n    \"pyodbc\",\r\n    \"pydantic\",\r\n    \"ciso8601\",\r\n    \"netcdf4\",\r\n    \"scipy\"\r\n]\r\nignore=\"CVS\"\r\nignore-patterns=\"test.*?py,conftest.py\"\r\ninit-hook='import sys; sys.setrecursionlimit(8 * sys.getrecursionlimit())'\r\njobs=0\r\nlimit-inference-results=100\r\npersistent=\"yes\"\r\nsuggestion-mode=\"yes\"\r\nunsafe-load-any-extension=\"no\"\r\n\r\n[tool.pylint.'MESSAGES CONTROL']\r\nenable=\"c-extension-no-member\"\r\n\r\n[tool.pylint.'REPORTS']\r\nevaluation=\"10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\"\r\noutput-format=\"text\"\r\nreports=\"no\"\r\nscore=\"yes\"\r\n\r\n[tool.pylint.'REFACTORING']\r\nmax-nested-blocks=5\r\nnever-returning-functions=\"sys.exit\"\r\n\r\n[tool.pylint.'BASIC']\r\nargument-naming-style=\"snake_case\"\r\nattr-naming-style=\"snake_case\"\r\nbad-names= [\r\n    \"foo\",\r\n    \"bar\"\r\n]\r\nclass-attribute-naming-style=\"any\"\r\nclass-naming-style=\"PascalCase\"\r\nconst-naming-style=\"UPPER_CASE\"\r\ndocstring-min-length=-1\r\nfunction-naming-style=\"snake_case\"\r\ngood-names= [\r\n    \"i\",\r\n    \"j\",\r\n    \"k\",\r\n    \"ex\",\r\n    \"Run\",\r\n    \"_\"\r\n]\r\ninclude-naming-hint=\"yes\"\r\ninlinevar-naming-style=\"any\"\r\nmethod-naming-style=\"snake_case\"\r\nmodule-naming-style=\"any\"\r\nno-docstring-rgx=\"^_\"\r\nproperty-classes=\"abc.abstractproperty\"\r\nvariable-naming-style=\"snake_case\"\r\n\r\n[tool.pylint.'FORMAT']\r\nignore-long-lines=\"^\\\\s*(# )?.*['\\\"]?<?https?://\\\\S+>?\"\r\nindent-after-paren=4\r\nindent-string='    '\r\nmax-line-length=120\r\nmax-module-lines=1000\r\nsingle-line-class-stmt=\"no\"\r\nsingle-line-if-stmt=\"no\"\r\n\r\n[tool.pylint.'LOGGING']\r\nlogging-format-style=\"old\"\r\nlogging-modules=\"logging\"\r\n\r\n[tool.pylint.'MISCELLANEOUS']\r\nnotes= [\r\n    \"FIXME\",\r\n    \"XXX\",\r\n    \"TODO\"\r\n]\r\n\r\n[tool.pylint.'SIMILARITIES']\r\nignore-comments=\"yes\"\r\nignore-docstrings=\"yes\"\r\nignore-imports=\"yes\"\r\nmin-similarity-lines=7\r\n\r\n[tool.pylint.'SPELLING']\r\nmax-spelling-suggestions=4\r\nspelling-store-unknown-words=\"no\"\r\n\r\n[tool.pylint.'STRING']\r\ncheck-str-concat-over-line-jumps=\"no\"\r\n\r\n[tool.pylint.'TYPECHECK']\r\ncontextmanager-decorators=\"contextlib.contextmanager\"\r\ngenerated-members=\"numpy.*,np.*,pyspark.sql.functions,collect_list\"\r\nignore-mixin-members=\"yes\"\r\nignore-none=\"yes\"\r\nignore-on-opaque-inference=\"yes\"\r\nignored-classes=\"optparse.Values,thread._local,_thread._local,numpy,torch,swagger_client\"\r\nignored-modules=\"numpy,torch,swagger_client,netCDF4,scipy\"\r\nmissing-member-hint=\"yes\"\r\nmissing-member-hint-distance=1\r\nmissing-member-max-choices=1\r\n\r\n[tool.pylint.'VARIABLES']\r\nadditional-builtins=\"dbutils\"\r\nallow-global-unused-variables=\"yes\"\r\ncallbacks= [\r\n    \"cb_\",\r\n    \"_cb\"\r\n]\r\ndummy-variables-rgx=\"_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\"\r\nignored-argument-names=\"_.*|^ignored_|^unused_\"\r\ninit-import=\"no\"\r\nredefining-builtins-modules=\"six.moves,past.builtins,future.builtins,builtins,io\"\r\n\r\n[tool.pylint.'CLASSES']\r\ndefining-attr-methods= [\r\n    \"__init__\",\r\n    \"__new__\",\r\n    \"setUp\",\r\n    \"__post_init__\"\r\n]\r\nexclude-protected= [\r\n    \"_asdict\",\r\n    \"_fields\",\r\n    \"_replace\",\r\n    \"_source\",\r\n    \"_make\"\r\n]\r\nvalid-classmethod-first-arg=\"cls\"\r\nvalid-metaclass-classmethod-first-arg=\"cls\"\r\n\r\n[tool.pylint.'DESIGN']\r\nmax-args=5\r\nmax-attributes=7\r\nmax-bool-expr=5\r\nmax-branches=12\r\nmax-locals=15\r\nmax-parents=7\r\nmax-public-methods=20\r\nmax-returns=6\r\nmax-statements=50\r\nmin-public-methods=2\r\n\r\n[tool.pylint.'IMPORTS']\r\nallow-wildcard-with-all=\"no\"\r\nanalyse-fallback-blocks=\"no\"\r\ndeprecated-modules=\"optparse,tkinter.tix\"\r\n\r\n[tool.pylint.'EXCEPTIONS']\r\novergeneral-exceptions= [\r\n    \"BaseException\",\r\n    \"Exception\"\r\n]\r\n"
        }
    ]
}